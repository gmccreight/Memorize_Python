{
  "note_model_uuid": "a1381100-b00b-11e9-86cd-a0999b116888",
  "field_Source": "https://docs.python.org/3/library/dataclasses.html",
  "field_Extra": "",
  "tags": ["new-in-python-3-7", "python-3-7", "python-lib", "python-lib-dataclasses"],
  "__sections": [
    {
      "__notes": [
        {
          "guid": "dc37f9Fxdd",
          "field_Front": "the dataclasses module was introduced in Python version {{c1::3.7}}"
        },
        {
          "guid": "xLJZ78zkYc",
          "field_Front": "The {{c1::dataclasses}} module provides a decorator and functions for automatically adding generated special methods such as __init__() and __repr__() to user-defined classes."
        },
        {
          "guid": "fm7nGQJI8X",
          "field_Front": "The name of the decorator that takes a class with fields and automatically generates special methods like __init__() and __repr__() on that class: {{c1::@dataclass}}"
        },
        {
          "guid": "02Th1VcNej",
          "field_Front": "dataclasses: The {{c1::member variables}} to use in these generated methods are defined using PEP 526 type annotations."
        },
        {
          "guid": "L1MquMRMJR",
          "field_Front": "The dataclass() decorator examines the class to find {{c1::fields}}."
        },
        {
          "guid": "XVqz0RuMYq",
          "field_Front": "dataclasses: A {{c1::field}} is defined as class variable that has a {{c2::type annotation}}."
        },
        {
          "guid": "wS7yVJXIAv",
          "field_Front": "dataclasses: in the __eq__() method that is generated it compares the class as if it were a {{c1::tuple of its fields}}, in order."
        },
        {
          "guid": "JqRvxCh0lN",
          "field_Front": "dataclasses: @dataclass will generate a __hash__() for you by default if the decorator arguments {{c1::eq}} and {{c1::frozen}} are both true"
        },
        {
          "guid": "2a2BvEcZW6",
          "field_Front": "Returns a tuple of Field objects that define the fields for this dataclass: {{c1::dataclasses.fields(class_or_instance}})"
        },
        {
          "guid": "xx893429sc",
          "field_Front": "dataclasses: If you pass the {{c1::order}} parameter to dataclass() then __lt__(), __le__(), __gt__(), and __ge__() methods will be generated"
        },
        {
          "guid": "KjF2v6NwPu",
          "field_Front": "dataclasses: you can replace the default field value with a call to the provided {{c1::field()}} function"
        },
        {
          "guid": "HwWcy21Acs",
          "field_Front": "dataclasses: the {{c1::MISSING}} value is a sentinel object used to detect if the default and default_factory parameters are provided to the field() function"
        },
        {
          "guid": "Q2kFRfRVYO",
          "field_Front": "dataclasses: the {{c1::default_factory}} paramater can be used to specify the default value for fields with mutable default values"
        }
      ]
    }
  ]
}
